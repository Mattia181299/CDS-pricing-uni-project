# -*- coding: utf-8 -*-
"""CDS spreads and PD.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m3gtJv5LuMai3s3Xc2FIFvUeGr_YToi-
"""

from numpy.core.fromnumeric import transpose
import pandas as pd 
import numpy as np

#creating dataframe for bid and ask in bps
df = pd.DataFrame({"Company":["Fiat", "Ericsson", "British Airways", "Merrill Lynch"],
                   "B1":[750,275,450,30],
                   "D1":[850,375,550,34],
                   "B2":[740,335,450,30],
                   "D2":[840,415,550,35],
                   "B3":[720,450,450,33],
                   "D3":[820,500,550,37],
                   "B4":[670,435,450,35],
                   "D4":[740,485,550,39],
                   "B5":[630,470,400,39],
                   "D5":[680,480,500,43]})
df.set_index("Company")

#spread is (bid+ask)/2
mid_spread=[(df.iloc[credit,maturity]+df.iloc[credit,maturity+1])/2 for maturity in range(1,10,2) for credit in range(0,4)]
df_CDS=pd.DataFrame()
j=0
for credit in df.Company:
    df_CDS[credit]=[mid_spread[i] for i in range(j,20,4)] 
    j+=1

df_CDS

#2. from spread to default probabilities
def prob_def(credit_name, r=.04, Recovery=.4, PD=np.zeros(len(df_CDS["Fiat"])+1)):
  PS=1-PD
  Discount_Factors=[(1+r)**-t for t in range(1,len(df_CDS["Fiat"])+1)]
  maturity=np.arange(0,len(df_CDS["Fiat"]))

  for N in maturity:
    sum_PS=sum([(Discount_Factors[j]*PS[j]) for j in range(0,N)])
    sum_PD=sum([(Discount_Factors[j]*PD[j]) for j in range(0,N)])
    CDS_spread=df_CDS.loc[N, credit_name]/10000
    numerator=CDS_spread*(sum_PS+(Discount_Factors[N]*PS[N-1]))-(1-Recovery)*sum_PD
    denominator=Discount_Factors[N]*(CDS_spread+(1-Recovery))
    PD[N]=numerator/denominator
    PS[N]=1-sum([PD[t] for t in range(0,N+1)])

  PD= PD[:-1]
  return 100*PD

PD_df= pd.DataFrame({"PD %": ["PD 1", "PD 2", "PD 3", "PD 4", "PD 5"],
                          'Fiat': prob_def("Fiat"), 
                          'Ericsson':prob_def("Ericsson"),  
                          'British Airways':prob_def("British Airways"), 
                          'Merrill Lynch':prob_def("Merrill Lynch")})
PD_df.set_index("PD %")

#from default probability to spread
def calc_spread(PD, r=.04, Recovery=.4):
  Spread=np.zeros(len(df_CDS["Fiat"]))
  PS=1-PD/100
  Discount_Factors=[(1+r)**-t for t in range(1,len(df_CDS["Fiat"])+1)]
  maturity=np.arange(1,len(df_CDS["Fiat"])+1)

  for N in maturity:
    sum_PS=sum([(Discount_Factors[j]*PS[j]) for j in range(0,N)])
    sum_PD=sum([(Discount_Factors[j]*PD[j])/100 for j in range(0,N)])
    Spread[N-1]=((1-Recovery)*sum_PD)/sum_PS
    PS[N]=1-sum([PD[t]/100 for t in range(0,N)])

  return Spread*10000

Spread_bps_df= pd.DataFrame({"Spread in bps": ["Spread 1", "Spread 2", "Spread 3", "Spread 4", "Spread 5"],
                          'Fiat': calc_spread(PD_df["Fiat"]), 
                          'Ericsson':calc_spread(PD_df["Ericsson"]),  
                          'British Airways':calc_spread(PD_df["British Airways"]), 
                          'Merrill Lynch':calc_spread(PD_df["Merrill Lynch"])})
Spread_bps_df